//PROJECT EULER: PROBLEM 29 DISTINCT POWERS

// Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

// 2^2=4, 2^3=8, 2^4=16, 2^5=32
// 3^2=9, 3^3=27, 3^4=81, 3^5=243
// 4^2=16, 4^3=64, 4^4=256, 4^5=1024
// 5^2=25, 5^3=125, 5^4=625, 5^5=3125
// If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

// 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

// How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

var isPrime = function(n) {
    var prime = true;
    for (var i = 2; i<=Math.sqrt(n); i++) {
        if (n % i === 0) {
            prime = false;
            return prime;
        }
    }
    return prime;
}

var findPrimes = function() {
    var primes = [2];
    for (var i = 3; i<100; i+=2) {
        if(isPrime(i)) {
            primes.push(i);
        }
    }
    return primes;
}



var findSquares = function() {
    var primes = findPrimes();
    var squares = {};

    for (var i = 2; i<=100; i++) {
          
    }
    
    return squares;
}



var findDistinct = function() {
    var exponents = {
        '4' : [2, 2],
        '8' : [2, 3],
        '9' : [3, 2],
        '16' : [2, 4],
        '25': [5, 2],
        '27': [3, 3],
        '36' : [6, 2],
        '49' : [7, 2],
        '64' : [2, 6],
        '81' : [3, 4],
        '100':[10, 2]
    }
    var count = 0;
    var results = {};
    var curr;
    
    for (var i = 2; i<=100; i++) {
        for (var j = 2; j<=100; j++) {
            curr = Math.pow(i, j);
            if (!results[curr]) {
                results[curr] = true;
                count++;
            }
        }
    }
    console.log(results);
    return count;
}


